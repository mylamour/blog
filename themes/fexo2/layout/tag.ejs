<div class="content content-tag">
  <%- partial('_partial/component/page-header', {location: __('location.tags')}) %>
    <%- partial('_partial/component/tag-box') %>
      <%- getPostListsDom(site.tags.sort('name'))%>
</div>

<% function getPostListsDom(tags) { var postList=[]; var processedTagNames=new Set(); tags.each(function (tag, i) { var
  tagNamesArray=tag.name.split(" ");  
  
        tagNamesArray.forEach(function (tagName) {  
            if (!processedTagNames.has(tagName)) {  
                processedTagNames.add(tagName);  
  
                var relatedTags = site.tags.filter(function (tag) {  
                    return tag.name.split(" ").includes(tagName);  
                });  
  
                var tagLength = relatedTags.reduce(function (totalLength, tag) {  
                    return totalLength + tag.length;  
                }, 0);  
  
                var tagInfo = { id: i % 5, isTag: true, tagName: tagName, count: tagLength };  
                postList.push(tagInfo);  
  
                // Combine all posts from related tags and sort them by date  
                var combinedPosts = [];  
                relatedTags.forEach(function (tag) {  
                    tag.posts.each(function (post) {  
                        combinedPosts.push(post);  
                    });  
                });  
  
                combinedPosts.sort(function (a, b) {  
                    return b.date - a.date;  
                });  
  
                // Add sorted posts to postList  
                combinedPosts.forEach(function (post) {  
                    postList.push(post);  
                });  
            }  
        });  
    });  
  
    var dom = '<ul class=" list-post">';

  postList.forEach(function (post, i) {
  var patialPath = post.isTag ? '_partial/component/item-tag' : '_partial/component/item-post';
  dom += partial(patialPath, { post: post });
  });

  dom += '</ul>';
  return dom;
  } %>